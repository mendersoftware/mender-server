# DEPRECATED: Superseded by OpenAPI v3 specs in ../../../docs/api/*.yaml
swagger: '2.0'
info:
  title: Deployments v2
  version: '2'
  description: |
    Version 2 of the API for deployments management.
    Intended for use by the web UI.

host: 'hosted.mender.io'
basePath: '/api/management/v2/deployments'
schemes:
  - https

consumes:
  - application/json
produces:
  - application/json

securityDefinitions:
  ManagementJWT:
    type: apiKey
    in: header
    name: Authorization
    description: |
      API token issued by User Authentication service.
      Format: 'Bearer [JWT]'

responses:
  InvalidRequestError: # 400
    description: Bad request, see error message for details.
    schema:
      $ref: "#/definitions/Error"
  UnauthorizedError: # 401
    description: Unauthorized.
    schema:
      $ref: "#/definitions/Error"
  NotFoundError: # 404
    description: Not Found.
    schema:
      $ref: "#/definitions/Error"
  ConflictError: # 409
    description: Conflict.
    schema:
      $ref: "#/definitions/ReleasesDeleteError"
  UnprocessableEntityError: # 422
    description: Unprocessable Entity.
    schema:
      $ref: "#/definitions/Error"
  InternalServerError: # 500
    description: Internal Server Error.
    schema:
      $ref: "#/definitions/Error"

paths:
  /deployments:
    get:
      operationId: List Deployments
      tags:
        - Management API
      security:
        - ManagementJWT: []
      summary: List all the deployments matching the specified filter parameters
      description: |
        Returns a filtered collection of deployments in the system. While you can provide multiple
        deployment identifiers, and multiple names to get the multiple deployments you cannot mix
        the ids and names in a one query expecting to get deployments that match both names or ids.
        The endpoint will return the deployments that match the ids and the name, if combined.
      parameters:
        - name: id
          in: query
          description: |
              Deployment identifier. You can provide it multiple times to query a set of deployments.
          required: false
          type: string
        - name: name
          in: query
          description: |
              Deployment name. You can provide it multiple times to query a set of deployments.
          required: false
          type: string
        - name: status
          in: query
          description: Deployment status filter.
          required: false
          type: string
          enum:
            - inprogress
            - finished
            - pending
        - name: type
          in: query
          description: |
              Deployment type filter.
          required: false
          type: string
          enum:
            - software
            - configuration
        - name: page
          in: query
          description: Results page number
          required: false
          type: number
          format: integer
          default: 1
        - name: per_page
          in: query
          description: Maximum number of results per page.
          required: false
          type: number
          format: integer
          default: 20
          maximum: 500
        - name: created_before
          in: query
          description: List only deployments created before and equal to Unix timestamp (UTC)
          required: false
          type: number
          format: integer
        - name: created_after
          in: query
          description: List only deployments created after and equal to Unix timestamp (UTC)
          required: false
          type: number
          format: integer
        - name: sort
          in: query
          description: |
            Supports sorting the deployments list by creation date.
          required: false
          type: string
          enum:
            - asc
            - desc
      produces:
        - application/json
      responses:
        200:
          description: Successful response.
          schema:
            type: array
            items:
              $ref: '#/definitions/Deployment'
          headers:
            Link:
              type: string
              description: Standard header, we support 'first', 'next', and 'prev'.
            X-Total-Count:
              type: integer
              description: Total number of deployments matching query.
        400:
          $ref: "#/responses/InvalidRequestError"
        401:
          $ref: '#/responses/UnauthorizedError'
        500:
          $ref: "#/responses/InternalServerError"

  /deployments/releases:
    get:
      operationId: List Releases with pagination
      tags:
        - Management API
      security:
        - ManagementJWT: []
      summary: |
        List releases
      description: |
        Returns a collection of releases, allows filtering by release name and sorting
        by name or last modification date.
      parameters:
        - name: name
          in: query
          description: Release name filter.
          required: false
          type: string
        - name: tag
          in: query
          description: Tag filter.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: update_type
          in: query
          description: Update type filter.
          required: false
          type: string
        - name: page
          in: query
          description: Starting page.
          required: false
          type: number
          format: integer
          default: 1
        - name: per_page
          in: query
          description: Maximum number of results per page.
          required: false
          type: number
          format: integer
          default: 20
          maximum: 500
        - name: sort
          in: query
          description: |
            Sort the release list by the specified field and direction.
          required: false
          type: string
          enum:
            - artifacts_count:asc
            - artifacts_count:desc
            - modified:asc
            - modified:desc
            - name:asc
            - name:desc
            - tags:asc
            - tags:desc
          default: "name:asc"
      produces:
        - application/json
      responses:
        200:
          description: Successful response.
          examples:
            application/json:
              - name: my-app-v1.0.1
                artifacts:
                  - id: 0c13a0e6-6b63-475d-8260-ee42a590e8ff
                    name: Application 1.0.0
                    description: Johns Monday test build
                    device_types_compatible: [Beagle Bone]
                    info:
                      format: mender
                      version: 3
                    signed: false
                    updates:
                      - type_info:
                          type: "rootfs-image"
                        files:
                          - name: rootfs-image-1
                            checksum: cc436f982bc60a8255fe1926a450db5f195a19ad
                            size: 123
                            date: 2016-03-11T13:03:17.063+0000
                        metadata: {}
                        meta_data: []
                    artifact_provides:
                      artifact_name: "test"
                      rootfs-image.checksum: "32714818ad6f98ee0185a52e23a475d89122e3efd2b2c26c733781c28e798c99"
                      rootfs-image.version: "test"
                    artifact_depends:
                      device_type:
                        - "test"
                    clears_artifact_provides:
                      - "rootfs-image.*"
                    size: 36891648
                    modified: "2016-03-11T13:03:17.063493443Z"
                  - id: 0c13a0e6-6b63-475d-8260-ee42a590e8ff
                    name: Application 1.0.0
                    description: Johns Monday test build
                    device_types_compatible: [Raspberry Pi]
                    info:
                      format: mender
                      version: 3
                    signed: false
                    updates:
                      - type_info:
                          type: "rootfs-image"
                        files:
                          - name: rootfs-image-1
                            checksum: cc436f982bc60a8255fe1926a450db5f195a19ad
                            size: 123
                            date: 2016-03-11T13:03:17.063+0000
                        metadata: {}
                        meta_data: []
                    artifact_provides:
                      artifact_name: "test"
                      rootfs-image.checksum: "32714818ad6f98ee0185a52e23a475d89122e3efd2b2c26c733781c28e798c99"
                      rootfs-image.version: "test"
                    artifact_depends:
                      device_type:
                        - "test"
                    clears_artifact_provides:
                      - "rootfs-image.*"
                    size: 36891648
                    modified: "2016-03-11T13:03:17.063493443Z"
              - name: my-app-v2.0.0
                artifacts:
                  - id: 0c13a0e6-6b63-475d-8260-ee42a590e8ff
                    name: Application 2.0.0
                    description: Johns Monday test build
                    device_types_compatible: [Beagle Bone]
                    info:
                      format: mender
                      version: 3
                    signed: false
                    updates:
                      - type_info:
                          type: "rootfs-image"
                        files:
                          - name: rootfs-image-1
                            checksum: cc436f982bc60a8255fe1926a450db5f195a19ad
                            size: 123
                            date: 2016-03-11T13:03:17.063+0000
                        metadata: {}
                        meta_data: []
                    artifact_provides:
                      artifact_name: "test"
                      rootfs-image.checksum: "32714818ad6f98ee0185a52e23a475d89122e3efd2b2c26c733781c28e798c99"
                      rootfs-image.version: "test"
                    artifact_depends:
                      device_type:
                        - "test"
                    clears_artifact_provides:
                      - "rootfs-image.*"
                    size: 36891648
                    modified: "2016-03-11T13:03:17.063493443Z"
          schema:
            $ref: '#/definitions/Releases'
          headers:
            Link:
              type: string
              description: Standard header, we support 'first', 'next', and 'prev'.
            X-Total-Count:
              type: integer
              description: Total number of releases matching query.
        401:
          $ref: '#/responses/UnauthorizedError'
        500:
          $ref: "#/responses/InternalServerError"

    delete:
      operationId: Delete Releases
      tags:
        - Management API
      security:
        - ManagementJWT: []
      summary: Delete the releases with given names
      description: |
        Deletes releases with names provided in the message body.
        Releases used by deployments in progress can not be deleted
        until deployment finishes.
      produces:
        - application/json
      parameters:
        - name: name
          in: query
          description: Name of the release to be deleted
          required: true
          type: string
      responses:
        204:
          description: Releases deleted successfully.
        400:
          $ref: '#/responses/InvalidRequestError'
        401:
          $ref: '#/responses/UnauthorizedError'
        409:
          $ref: "#/responses/ConflictError"
        500:
          $ref: "#/responses/InternalServerError"

  /deployments/releases/{release_name}:
    get:
      operationId: Get Release with given name
      tags:
        - Management API
      security:
        - ManagementJWT: []
      summary: |
        Get release
      description: |
        Returns the release with given name.
      parameters:
        - name: release_name
          in: path
          description: Name of the release
          required: true
          type: string
      produces:
        - application/json
      responses:
        200:
          description: Successful response.
          schema:
            $ref: '#/definitions/Release'
        401:
          $ref: '#/responses/UnauthorizedError'
        404:
          $ref: '#/responses/NotFoundError'
        500:
          $ref: "#/responses/InternalServerError"
    patch:
      operationId: Update Release information
      tags:
        - Management API
      security:
        - ManagementJWT: []
      summary: |
        Update selected fields of the Release object.
      description: |
        Updates the Release object.
      parameters:
        - name: release_name
          in: path
          description: Name of the release
          required: true
          type: string
        - name: release_update
          in: body
          schema:
            $ref: "#/definitions/ReleaseUpdate"
      produces:
        - application/json
      responses:
        204:
          description: Successful response.
        400:
          $ref: "#/responses/InvalidRequestError"
        401:
          $ref: "#/responses/UnauthorizedError"
        500:
          $ref: "#/responses/InternalServerError"

  /deployments/releases/{release_name}/tags:
    put:
      operationId: Assign Release Tags
      tags:
        - Management API
      security:
        - ManagementJWT: []
      summary: |
        Update and replace the tags of a release.
      description: |
        Assigns tags to a release. The tags associated with the release will be
        replaced with the ones defined in the request body.

        LIMITATIONS:
          * Max 20 tags can be assigned to a single release.
          * There can be no more than 100 unique tag keys in total.
      parameters:
        - name: release_name
          in: path
          description: Name of the release
          required: true
          type: string
        - name: tags
          in: body
          schema:
            $ref: "#/definitions/Tags"
      produces:
        - application/json
      responses:
        204:
          description: Successful response.
        400:
          $ref: "#/responses/InvalidRequestError"
        401:
          $ref: "#/responses/UnauthorizedError"
        409:
          description: Too many unique tag keys in use.
          schema:
            $ref: "#/definitions/Error"

          examples:
            application/json:
              error: "the total number of unique tags has been exceeded"
              request_id: "f7881e82-0492-49fb-b459-795654e7188a"
        500:
          $ref: "#/responses/InternalServerError"

  /releases/all/tags:
    get:
      operationId: List Release Tags
      tags:
        - Management API
      security:
        - ManagementJWT: []
      summary: |
        Lists all available tags for releases.
      produces:
        - application/json
      responses:
        200:
          description: Successful response.
          schema:
            $ref: "#/definitions/Tags"
        400:
          $ref: "#/responses/InvalidRequestError"
        401:
          $ref: "#/responses/UnauthorizedError"
        409:
          description: Too many unique tag keys in use.
          schema:
            $ref: "#/definitions/Error"

          examples:
            application/json:
              error: "the total number of unique tags has been exceeded"
              request_id: "f7881e82-0492-49fb-b459-795654e7188a"
        500:
          $ref: "#/responses/InternalServerError"

  /releases/all/types:
    get:
      operationId: List Release Types
      tags:
        - Management API
      security:
        - ManagementJWT: []
      summary: |
        Lists all release update types.
      produces:
        - application/json
      responses:
        200:
          description: Successful response.
          schema:
            $ref: "#/definitions/UpdateTypes"
        400:
          $ref: "#/responses/InvalidRequestError"
        401:
          $ref: "#/responses/UnauthorizedError"
        500:
          $ref: "#/responses/InternalServerError"

  /artifacts:
    get:
      operationId: List Artifacts with pagination
      tags:
      - Management API
      security:
      - ManagementJWT: []
      summary: |
        Lists known artifacts.
      description: |
        Returns a collection of all artifacts sorted by name.
      parameters:
        - name: name
          in: query
          description: | 
            Artifact(s) name(s) filter.
            Multiple names can be provided (e.g., `?name=foo&name=bar`).
            Supports exact matching or prefix matching by adding `*` to the end (e.g., `foo*`).
            Note: when using prefix matching you may pass only a single value and you cannot combine
            prefix matching and exact matching in the same request.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: description
          in: query
          description: |
            Artifact description filter.
            Supports exact matching or prefix matching by adding `*` to the end (e.g., `foo*`).
          required: false
          type: string
        - name: device_type
          in: query
          description: |
            Artifact device type filter.
            Supports exact matching or prefix matching by adding `*` to the end (e.g., `foo*`).
          required: false
          type: string
        - name: page
          in: query
          description: Starting page.
          required: false
          type: number
          format: integer
          default: 1
        - name: per_page
          in: query
          description: Maximum number of results per page.
          required: false
          type: number
          format: integer
          default: 20
          maximum: 500
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Artifact"
          headers:
            Link:
              type: string
              description: Standard header, we support 'first', 'next', and 'prev'.
        401:
          $ref: '#/responses/UnauthorizedError'
        500:
          $ref: "#/responses/InternalServerError"

definitions:
  Artifact:
    description: Detailed artifact.
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      device_types_compatible:
        type: array
        description: An array of compatible device types.
        items:
          type: string
      info:
        $ref: "#/definitions/ArtifactInfo"
      signed:
        type: boolean
        description: Idicates if artifact is signed or not.
      updates:
        type: array
        items:
          $ref: "#/definitions/Update"
      artifact_provides:
        type: object
        description: |
          List of Artifact provides.

          Map of key/value pairs, where both keys and values are strings.
        additionalProperties:
          type: string
      artifact_depends:
        type: object
        description: |
          List of Artifact depends.

          Map of key/value pairs, where keys are strings and values are lists of strings.
        additionalProperties:
          type: array
          items:
            type: string
      clears_artifact_provides:
        type: array
        description: List of Clear Artifact provides.
        items:
          type: string
      size:
        type: number
        format: integer
        description: |
            Artifact total size in bytes - the size of the actual file that will be transferred to the device (compressed).
      modified:
        type: string
        format: date-time
        description: |
            Represents creation / last edition of any of the artifact properties.
    required:
      - name
      - description
      - device_types_compatible
      - id
      - modified
    example:
      id: 0c13a0e6-6b63-475d-8260-ee42a590e8ff
      name: Application 1.0.0
      description: Johns Monday test build
      device_types_compatible: [Beagle Bone]
      info:
        format: mender
        version: 3
      signed: false
      updates:
        - type_info:
            type: "rootfs-image"
          files:
            - name: rootfs-image-1
              checksum: cc436f982bc60a8255fe1926a450db5f195a19ad
              size: 123
              date: 2016-03-11T13:03:17.063+0000
          metadata: {}
          meta_data: []
      artifact_provides:
        artifact_name: "test"
        rootfs-image.checksum: "32714818ad6f98ee0185a52e23a475d89122e3efd2b2c26c733781c28e798c99"
        rootfs-image.version: "test"
      artifact_depends:
        device_type:
          - "test"
      clears_artifact_provides:
        - "rootfs-image.*"
      size: 36891648
      modified: "2016-03-11T13:03:17.063493443Z"

  ArtifactInfo:
    description: |
        Information about artifact format and version.
    type: object
    properties:
      format:
        type: string
      version:
        type: integer

  ArtifactTypeInfo:
    description: |
        Information about update type.
    type: object
    properties:
      type:
        type: string
        description: Note that for emtpy Artifacts, the type is 'null'

  Releases:
    description: List of releases
    type: array
    items:
      $ref: "#/definitions/Release"

  Release:
    description: Groups artifacts with the same release name into a single resource.
    type: object
    properties:
      name:
        type: string
        description: |
            release name.
      modified:
        type: string
        format: date-time
        description: |
            Last modification time for the release.
      artifacts:
        type: array
        description: List of artifacts for this release.
        items:
          $ref: "#/definitions/Artifact"
      tags:
        type: array
        description: |-
          Tags assigned to the release used for filtering releases. Each tag
          must be valid a ASCII string and contain only lowercase and uppercase
          letters, digits, underscores, periods and hyphens.
        items:
          type: string
      notes:
        type: string
        description: |
          Additional information describing a Release limited to 1024 characters. Please use the v2 API to set this field.
    example:
      name: my-app-v1.0.1
      artifacts:
        - id: 0c13a0e6-6b63-475d-8260-ee42a590e8ff
          name: Application 1.0.0
          description: Johns Monday test build
          device_types_compatible: [Beagle Bone]
          info:
            format: mender
            version: 3
          signed: false
          updates:
            - type_info:
                type: "rootfs-image"
              files:
                - name: rootfs-image-1
                  checksum: cc436f982bc60a8255fe1926a450db5f195a19ad
                  size: 123
                  date: 2016-03-11T13:03:17.063+0000
              metadata: {}
              meta_data: []
          artifact_provides:
            artifact_name: "test"
            rootfs-image.checksum: "32714818ad6f98ee0185a52e23a475d89122e3efd2b2c26c733781c28e798c99"
            rootfs-image.version: "test"
          artifact_depends:
            device_type:
              - "test"
          clears_artifact_provides:
            - "rootfs-image.*"
          size: 36891648
          modified: "2016-03-11T13:03:17.063493443Z"
        - id: 0c13a0e6-6b63-475d-8260-ee42a590e8ff
          name: Application 1.0.0
          description: Johns Monday test build
          device_types_compatible: [Raspberry Pi]
          info:
            format: mender
            version: 3
          signed: false
          updates:
            - type_info:
                type: "rootfs-image"
              files:
                - name: rootfs-image-1
                  checksum: cc436f982bc60a8255fe1926a450db5f195a19ad
                  size: 123
                  date: 2016-03-11T13:03:17.063+0000
              metadata: {}
              meta_data: []
          artifact_provides:
            artifact_name: "test"
            rootfs-image.checksum: "32714818ad6f98ee0185a52e23a475d89122e3efd2b2c26c733781c28e798c99"
            rootfs-image.version: "test"
          artifact_depends:
            device_type:
              - "test"
          clears_artifact_provides:
            - "rootfs-image.*"
          size: 36891648
          modified: "2016-03-11T13:03:17.063493443Z"

  ReleaseUpdate:
    type: object
    description: |-
      Fields to be updated in the given Release.
    properties:
      notes:
        description: Release notes, limited to maximum length.
        type: string
    example:
      notes: "New security fixes 2023"

  Tags:
    type: array
    description: |-
      Tags assigned to the release used for filtering releases. Each tag
      must be valid a ASCII string and contain only lowercase and uppercase
      letters, digits, underscores, periods and hyphens.
    items:
      type: string

  Update:
    description: |
        Single updated to be applied.
    type: object
    properties:
      type_info:
        $ref: "#/definitions/ArtifactTypeInfo"
      files:
        type: array
        items:
          $ref: "#/definitions/UpdateFile"
      metadata:
        type: object
        description: an object of unknown structure as this is dependent of update type (also custom defined by user
      meta_data:
        type: array
        description: |
          Deprecated: Please use `metadata` instead.
          An object of unknown structure as this is dependent of update type (also custom defined by user)
        items:
          type: object

  UpdateFile:
      description: |
          Information about particular update file.
      type: object
      properties:
        name:
          type: string
        checksum:
          type: string
        size:
          type: integer
        date:
          type: string
          format: date-time

  UpdateTypes:
    type: array
    description: |-
      Update types as present in the images.
    items:
      type: string

  Error:
    description: Error descriptor.
    type: object
    properties:
      error:
        description: Description of the error.
        type: string
      request_id:
        description: Request ID (same as in X-MEN-RequestID header).
        type: string
    example:
      error: "failed to decode device group data: JSON payload is empty"
      request_id: "f7881e82-0492-49fb-b459-795654e7188a"

  FilterPredicate:
    description: Attribute filter predicate
    type: object
    required:
      - scope
      - attribute
      - type
      - value
    properties:
      scope:
        type: string
        description: |
          The scope of the attribute.

          Scope is a string and acts as namespace for the attribute name.
      attribute:
        type: string
        description: |
          Name of the attribute to be queried for filtering.
      type:
        type: string
        description: Type or operator of the filter predicate.
        enum: [$eq, $gt, $gte, $in, $lt, $lte, $ne, $nin, $exists]
      value:
        type: string
        description: |
          The value of the attribute to be used in filtering.

          Attribute type is implicit, inferred from the JSON type.

          Supported types: number, string, array of numbers, array of strings.
          Mixed arrays are not allowed.
    example:
      type: "$eq"
      attribute: "serial_no"
      scope: "inventory"
      value: "123456789"

  Filter:
    description: Inventory filter assigned to the deployment
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: string
        description: |
          Unique identifier of the saved filter.
      name:
        type: string
        description: |
          Name of the saved filter.
      terms:
        type: array
        items:
          $ref: "#/definitions/FilterPredicate"
    example:
      id: "myfilter"
      name: "My Filter"
      terms:
        - scope: "inventory"
          attribute: "serial_no"
          type: "$eq"
          value: "123456789"

  DeploymentPhase:
    type: object
    properties:
      id:
        type: string
        description: Phase identifier.
      batch_size:
        type: integer
        description: |
          Percentage of devices to update in the phase.
      start_ts:
        type: string
        format: date-time
        description: |
          Start date of a phase.
          May be undefined for the first phase of a deployment.
      device_count:
        type: integer
        description: |
          Number of devices which already requested an update within this phase.
    example:
      application/json:
        id: "foo"
        start_ts: 2020-07-06T15:04:49.114046203+02:00
        batch_size: 5
        device_count: 42

  DeploymentStatusStatistics:
    type: object
    properties:
      success:
        type: integer
        description: Number of successful deployments.
      pending:
        type: integer
        description: Number of pending deployments.
      downloading:
        type: integer
        description: Number of deployments being downloaded.
      rebooting:
        type: integer
        description: Number of deployments devices are rebooting into.
      installing:
        type: integer
        description: Number of deployments devices being installed.
      failure:
        type: integer
        description: Number of failed deployments.
      noartifact:
        type: integer
        description: Do not have appropriate artifact for device type.
      already-installed:
        type: integer
        description: Number of devices unaffected by upgrade, since they are already running the specified software version.
      aborted:
        type: integer
        description: Number of deployments aborted by user.
      pause_before_installing:
        type: integer
        description: Number of deployments paused before install state.
      pause_before_rebooting:
        type: integer
        description: Number of deployments paused before reboot phase.
      pause_before_committing:
        type: integer
        description: Number of deployments paused before commit phase.
    required:
      - success
      - pending
      - downloading
      - installing
      - rebooting
      - failure
      - noartifact
      - already-installed
      - aborted
      - pause_before_installing
      - pause_before_rebooting
      - pause_before_committing
    example:
      success: 3
      pending: 1
      failure: 0
      downloading: 1
      installing: 2
      rebooting: 3
      noartifact: 0
      already-installed: 0
      aborted: 0
      pause_before_installing: 0
      pause_before_rebooting: 0
      pause_before_committing: 0

  DeploymentStatistics:
    type: object
    properties:
      status:
        $ref: "#/definitions/DeploymentStatusStatistics"
      total_size:
        type: integer
        description: |
          Sum of sizes (in bytes) of all artifacts assigned to all device deployments,
          which are part of this deployment.
          If the same artifact is assigned to multiple device deployments,
          its size will be counted multiple times.

  Deployment:
    type: object
    properties:
      id:
        type: string
        description: Deployment identifier
      name:
        type: string
        description: Name of the deployment
      artifact_name:
        type: string
        description: Name of the artifact to deploy
      created:
        type: string
        format: date-time
        description: Deployment's creation date and time
      finished:
        type: string
        format: date-time
        description: Deployment's completion date and time
      status:
        type: string
        enum:
          - scheduled
          - pending
          - inprogress
          - finished
        description: Status of the deployment
      device_count:
        type: integer
        description: Number of devices the deployment acted upon
      artifacts:
        type: array
        description: An array of artifact's identifiers.
        items:
          type: string
      groups:
        type: array
        description: |
          An array of groups the devices targeted by the deployment belong to.
          Available only if the user created the deployment for a group or a single device (if the device was in a static group).
        items:
          type: string
      phases:
        type: array
        description: An array of deployments phases (if any were defined for the deployment).
        items:
          $ref: "#/definitions/DeploymentPhase"
      retries:
        type: integer
        description: The number of times a device can retry the deployment in case of failure, defaults to 0
        default: 0
      update_control_map:
        type: object
        additionalProperties: true
        description: |
          A valid JSON object defining the update control map.
          *NOTE*: Available only in the Enterprise plan.
      max_devices:
        type: integer
        description: |
          max_devices denotes a limit on a number of completed deployments (failed or successful) above which the dynamic deployment will be finished.
      initial_device_count:
        type: integer
        description: |
          In case of dynamic deployments this is a number of devices targeted initially (maching the filter at the moment of deployment creation).
      dynamic:
        type: boolean
        description: |
          Flag indicating if the deployment is dynamic or not.
      filter:
        $ref: "#/definitions/Filter"
      type:
        type: string
        enum:
          - configuration
          - software
      configuration:
        type: string
        description: |
          A string containing a configuration object provided
          with the deployment constructor.
      autogenerate_delta:
        type: boolean
        description: |
          The flag idicating if the autogeneration of delta artifacts is enabled for a given deployment.
      statistics:
        $ref: "#/definitions/DeploymentStatistics"
    required:
      - created
      - name
      - artifact_name
      - id
      - status
      - device_count
    example:
      created: 2016-02-11T13:03:17.063493443Z
      status: finished
      name: production
      artifact_name: Application 0.0.1
      id: 00a0c91e6-7dec-11d0-a765-f81d4faebf6
      finished: 2016-03-11T13:03:17.063493443Z
      phases:
        - batch_size: 5
        - start_ts: 2020-07-06T17:04:49.114046203+02:00
          device_count: 25
        - batch_size: 15
        - start_ts: 2020-07-06T18:04:49.114046203+02:00
          device_count: 10
        - start_ts: 2020-07-06T19:04:49.114046203+02:00
          device_count: 0
      device_count: 500
      retries: 3

  NewDeploymentV2:
    type: object
    properties:
      name:
        type: string
      artifact_name:
        type: string
      filter_id:
        type: string
        description: ID of a filter from inventory service.
      phases:
        type: array
        description: |
          Phased rollout feature is available only to Enterprise users.
        items:
          $ref: "#/definitions/NewDeploymentPhase"
      retries:
        type: integer
        description: The number of times a device can retry the deployment in case of failure, defaults to 0
        default: 0
      max_devices:
        type: integer
        description: |
          max_devices denotes a limit on a number of completed deployments (failed or successful) above which the dynamic deployment will be finished
      update_control_map:
        x-mender-plan: ["enterprise"]
        type: object
        additionalProperties: true
        description: |
          A valid JSON object defining the update control map.
          *NOTE*: Available only in the Enterprise plan.
      autogenerate_delta:
        type: boolean
        description: |
          The flag idicating if the autogeneration of delta artifacts is enabled for a given deployment.
        default: false
    required:
      - name
      - artifact_name
      - filter_id
    example:
      name: production
      artifact_name: Application 0.0.1
      filter_id: 00a0c91e6-7dec-11d0-a765-f81d4faebf6
      phases:
        - batch_size: 5
          start_ts: 2020-07-06T17:04:49.114046203+02:00
        - batch_size: 15
          start_ts: 2020-07-06T18:04:49.114046203+02:00
        - start_ts: 2020-07-06T19:04:49.114046203+02:00
      retries: 3
  NewDeploymentPhase:
    type: object
    properties:
      batch_size:
        type: integer
        description: |
          Percentage of devices to update in the phase.
          This field is optional for the last phase.
          The last phase will contain the rest of the devices.
          Note that if the percentage of devices entered does not add up to a whole number of devices it is rounded down, and in the case it is rounded down to zero, a 400 error will be returned.
          This is mostly a concern when the deployment consists of a low number of devices, like say 5 percent of 11 devices will round to zero, and an error is returned by the server.
          In the case of dynamic deployment, the number of devices for each phase is being calculated based on the initial number of devices matching the filter.
      start_ts:
        type: string
        format: date-time
        description: |
          Start date of a phase.
          Can be skipped for the first phase of a new deployment definition ('start immediately').
    example:
      start_ts: 2019-07-07T21:10:17.063493443Z
      batch_size: 5

  ReleasesDeleteError:
    description: Releases used by active deployment.
    type: object
    properties:
      error:
        description: Description of the error.
        type: string
      active_deployments:
        description: List of IDs of active deployments which are using releases from the request.
        type: array
        items:
          type: string
      request_id:
        description: Request ID (same as in X-MEN-RequestID header).
        type: string
    example:
      error: "active deployments are using some of the releases from the request"
      request_id: "f7881e82-0492-49fb-b459-795654e7188a"
        #active_deployments:
        #  - "34d39c31-2a81-4882-a016-d96f46b19f3b"
        #  - "9afc6156-9e92-4467-9ead-c71298dc1f4b"
        #  - "ebff371c-2256-429e-87a9-20274c50946f"
