openapi: 3.0.0
info:
  version: '0.1.0'
  title: Device Authentication
  description: |
    An API for device authentication handling. Not exposed via the API Gateway,
    internal use only.
servers:
  - url: http://mender-deviceauth:8080/api/internal/v1/devauth/
paths:
  /alive:
    get:
      operationId: Check Liveliness
      tags:
        - Internal API
      summary: >
        Trivial endpoint that unconditionally returns an empty 204 response
        whenever the API handler is running correctly.
      responses:
        '204':
          description: Service is up and running
        '500':
          description: >
            Internal API error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /health:
    get:
      operationId: Check Health
      tags:
        - Internal API
      summary: Check the health of the service
      responses:
        '204':
          description: >
            Service is healthy and all dependencies are up and running.
        '500':
          description: >
            Unexpected internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example1:
                  value:
                    error: "internal error"
                    request_id: "ffd712be-d697-4cb7-814b-88ff1e2eb5f6"
        '503':
          description: >
            Service unhealthy / not ready to accept traffic. At least one
            dependency is not running.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example2:
                  value:
                    error: "error reaching MongoDB: context deadline exceeded"
                    request_id: "ffd712be-d697-4cb7-814b-88ff1e2eb5f6"

  /tokens/verify:
    post:
      operationId: Verify JWT
      tags:
        - Internal API
      summary: Check the validity of a token
      description: |
        Besides the basic validity check, checks the token expiration time and
        user-initiated token revocation. Services which intend to use it should
        be correctly set up in the gateway's configuration.
      parameters:
        - name: Authorization
          in: header
          description: The token in base64-encoded form.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The token is valid.
        '400':
          description: Missing or malformed request parameters.
        '401':
          description: Verification failed, authentication should not be granted.
        '403':
          description: Token has expired - apply for a new one.
        '500':
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tokens:
    delete:
      operationId: Revoke Device Tokens
      tags:
        - Internal API
      summary: Delete device tokens
      description: |
        This endpoint is designed to be used for device decommissioning
        and tenant account suspension purpose.
        For device decommissioning purpose both tenant_id and device_id parameters
        must be set. When both tenant_id and device_id parameters are set,
        all tokens will be deleted for device with given device_id.
        For tenant account suspension purpose only tenant_id parameter must be set.
        When device_id parameter is not set (only tenant_id parameter is set)
        all tokens for all tenant devices will be deleted.
      parameters:
        - name: tenant_id
          in: query
          required: true
          schema:
            type: string
        - name: device_id
          in: query
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Tokens deleted.
        '400':
          description: Invalid parameters. See error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tenant/{tenant_id}/limits/max_devices:
    get:
      operationId: Get Device Limit
      tags:
        - Internal API
      summary: Max device count limit
      parameters:
        - name: tenant_id
          description: Tenant ID.
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Limit'
        '400':
          description: Invalid parameters. See error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: Update Device Limit
      tags:
        - Internal API
      summary: Update max device count limit
      parameters:
        - name: tenant_id
          description: Tenant ID.
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Limit'
      responses:
        '204':
          description: Limit information updated.
        '400':
          description: The request body is malformed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      operationId: Clear Device Limit
      tags:
        - Internal API
      summary: Remove max device count limit
      parameters:
        - name: tenant_id
          description: Tenant ID.
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Limit information deleted.
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tenants:
    post:
      operationId: Create Tenant
      tags:
        - Internal API
      summary: Provision a new tenant
      description: |
          Sets up all tenant-related infrastructure, e.g. a migrated tenant's database.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTenant'
      responses:
        '201':
          description: Tenant was successfully provisioned.
        '400':
          description: Bad request.
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tenants/{tid}/devices/{did}:
    delete:
      operationId: Delete Device
      tags:
        - Internal API
      summary: "Delete a device from deviceauth service."
      parameters:
        - name: tid
          in: path
          required: true
          schema:
            type: string
        - name: did
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Device deleted successfully.
        '400':
          description: Bad request.
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tenants/{tid}/devices/{did}/external:
    put:
      operationId: Set external identity
      tags:
        - Internal API
      summary: "Replace the external identity of a device."
      parameters:
        - name: tid
          in: path
          description: Tenant identifier.
          required: true
          schema:
            type: string
        - name: did
          in: path
          description: Device identifier.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalDevice'
      responses:
        '204':
          description: Device identity updated successfully.
        '400':
          description: Bad request.
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tenants/{tid}/devices/{did}/status:
    get:
      operationId: Device Status
      tags:
        - Internal API
      summary: Get the status of a tenant's device
      description: |
          Returns the overall status of the device, computed over the statuses of its various authsets.
      parameters:
        - name: tid
          in: path
          description: Tenant identifier.
          required: true
          schema:
            type: string
        - name: did
          in: path
          description: Device identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Invalid parameters. See error message for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Tenant or device not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tenants/{tid}/devices:
    get:
      operationId: List Devices
      tags:
        - Internal API
      summary: Get a list of tenant's devices.
      description: |
        Provides a list of tenant's devices, sorted by creation date, with optional device status filter.
      parameters:
        - name: tid
          in: path
          description: Tenant identifier.
          required: true
          schema:
            type: string
        - name: status
          in: query
          description: |
            Device status filter. If not specified, all devices are listed.
          required: false
          schema:
            type: string
            enum:
              - pending
              - accepted
              - rejected
              - preauthorized
              - noauth
        - name: id
          in: query
          description: Device ID filter. Can be repeated to query a set of devices.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: page
          in: query
          description: Results page number.
          required: false
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          description: Maximum number of results per page.
          required: false
          schema:
            type: integer
            default: 20
            maximum: 500
      responses:
        '200':
          description: An array of devices.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
          headers:
            Link:
              description: Standard header, we support 'first', 'next', and 'prev'.
              schema:
                type: string
        '400':
          description: Missing/malformed request params.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tenants/{tid}/devices/count:
    get:
      operationId: Count Devices
      summary: Count number of devices, optionally filtered by status.
      tags:
        - Internal API
      parameters:
        - name: tid
          in: path
          description: Tenant identifier.
          required: true
          schema:
            type: string
        - name: status
          in: query
          description: |
            Device status filter, one of 'pending', 'accepted', 'rejected', 'noauth'. Default is 'all devices'.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Device count.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Count'
        '400':
          description: Missing/malformed request params.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    NewTenant:
      type: object
      properties:
        tenant_id:
          type: string
          description: New tenant's ID.
      example:
        tenant_id: "58be8208dd77460001fe0d78"
    Limit:
      type: object
      properties:
        limit:
          type: integer
      required:
        - limit
      example:
        limit: 123
    Error:
      type: object
      properties:
        error:
          type: string
          description: Description of the error.
        request_id:
          type: string
          description: Request ID (same as in X-MEN-RequestID header).
      example:
        error: "failed to decode request body: JSON payload is empty"
        request_id: "f7881e82-0492-49fb-b459-795654e7188a"
    Status:
      type: object
      properties:
        status:
          type: string
          enum:
            - pending
            - accepted
            - rejected
            - preauthorized
            - noauth
      required:
        - status
      example:
        status: "accepted"
    Device:
      type: object
      properties:
        id:
          type: string
          description: Mender assigned Device ID.
        identity_data:
          $ref: "#/components/schemas/IdentityData"
        status:
          type: string
          enum:
            - pending
            - accepted
            - rejected
            - preauthorized
            - noauth
        created_ts:
          type: string
          format: datetime
          description: Created timestamp
        updated_ts:
          type: string
          format: datetime
          description: Updated timestamp
        check_in_time:
          type: string
          format: date-time
          description: |
            Time when accepted device contacted server for the last time.
        auth_sets:
          type: array
          items:
            $ref: "#/components/schemas/AuthSet"
        decommissioning:
          type: boolean
          description: Devices that are part of ongoing decommissioning process will return True
    ExternalDevice:
      type: object
      description: "External device descriptor"
      properties:
        id:
          type: string
          description: "ID assigned by external provider"
        name:
          type: string
          description: "Name of the device"
        provider:
          type: string
          description: "Name of the external provider"
        id_data:
          type: string
          description: "Optional custom ID data"
      required:
        - id
        - name
        - provider
    AuthSet:
      type: object
      properties:
        id:
          type: string
          description: Authentication data set ID.
        pubkey:
          type: string
          description: >
            The device's public key (PEM encoding), generated by the device or
            pre-provisioned by the vendor. Currently supported public algorithms
            are: RSA, Ed25519 and ECDSA P-256.
        identity_data:
          $ref: "#/components/schemas/IdentityData"
        status:
          type: string
          enum:
            - pending
            - accepted
            - rejected
            - preauthorized
        ts:
          type: string
          format: datetime
          description: Created timestamp
    Count:
      type: object
      properties:
        count:
          description: The count of requested items.
          type: integer
      example:
        count: 42
    IdentityData:
      type: object
      description: |
        Device identity attributes, in the form of a JSON structure.
        The attributes are completely vendor-specific, the provided ones are just an example.
        In reference implementation structure contains vendor-selected fields,
        such as MACs, serial numbers, etc.
      properties:
        mac:
          description: MAC address.
          type: string
        sku:
          description: Stock keeping unit.
          type: string
        sn:
          description: Serial number.
          type: string
      example:
        mac: "00:01:02:03:04:05"
        sku: "My Device 1"
        sn: "SN1234567890"
 
