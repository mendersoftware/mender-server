openapi: 3.0.3

info:
  title: Device configure
  description: |
    API for managing device configuration.
    Intended for use by the web GUI

  version: "2"

servers:
  - url: https://hosted.mender.io/api/management/v2/deviceconfig

# Global security definitions
security:
  - ManagementJWT: []

tags:
  - name: Management API

paths:
  /configurations/device/{deviceId}:
    get:
      operationId: Get Device Configuration
      tags:
        - Management API
      summary: Get the device's configuration
      parameters:
        - in: path
          name: deviceId
          schema:
            type: string
            format: uuid
          required: true
          description: ID of the device to query.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceConfiguration'
        400:
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    ManagementJWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        JWT token issued by 'POST /api/management/v1/useradm/auth/login'

        The JWT can be alternatively passed as a cookie named "JWT".

  schemas:
    ManagementAPIConfiguration:
      type: object
      additionalProperties:
        oneOf:
          - type: string
          - type: object
              properties:
                value:
                  type: string
                hidden:
                  description: |
                    Hide the value from the user.
                  type: boolean

    DeviceConfiguration:
      type: object
      properties:
        id:
          type: string
          format: uuid
        configured:
          $ref: '#/components/schemas/ManagementAPIConfiguration'
        reported:
          $ref: '#/components/schemas/ManagementAPIConfiguration'
        deployment_id:
          description: ID of the latest configuration deployment
          type: string
          format: uuid
        reported_ts:
          type: string
          format: date-time
        updated_ts:
          type: string
          format: date-time

    Error:
      type: object
      properties:
        error:
          type: string
          description: Description of the error.
        request_id:
          type: string
          description:
            Request ID passed with the request X-Men-Requestid header
            or generated by the server.
      description: Error descriptor.
      example:
        error: "<error description>"
        request_id: "eed14d55-d996-42cd-8248-e806663810a8"


  responses:
    InternalServerError:
      description: Internal Server Error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "internal error"
            request_id: "eed14d55-d996-42cd-8248-e806663810a8"

    InvalidRequestError:
      description: Invalid Request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "bad request parameters"
            request_id: "eed14d55-d996-42cd-8248-e806663810a8"

    ForbiddenError:
      description: |
          The user is not permitted to access the resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "Forbidden"
            request_id: "eed14d55-d996-42cd-8248-e806663810a8"
